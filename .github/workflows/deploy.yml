name: Deploy

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

env:
  DOCKER_IMAGE_NAME: akatukisora/pjserver-sys

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # cancel-in-progress: true # デプロイは重なってもすべて実行されるようにキャンセルを無効化

jobs:
  docker-build-and-push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,format=long,prefix=
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=Docker image for ${{ github.event.repository.name }}
            org.opencontainers.image.url=${{ github.event.repository.url }}
            org.opencontainers.image.source=${{ github.event.repository.url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:cache,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            GIT_COMMIT=${{ github.sha }}
            GIT_BRANCH=${{ github.ref_name }}
            GIT_TAG=${{ github.ref_name }}
            GIT_REPOSITORY=${{ github.repository }}
            GIT_REPOSITORY_URL=${{ github.event.repository.url }}

      - name: Run Docker Scout
        uses: docker/scout-action@v1
        with:
          image: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.ref_name }}
          command: cves
          only-severities: critical,high
          format: sarif
          output: scout-results.sarif

      - name: Upload SARIF results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-results.sarif

      - name: Generate and attest provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
